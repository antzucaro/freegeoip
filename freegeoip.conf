<?xml version="1.0" encoding="UTF-8"?>
<Server debug="true">
	<!-- Default HTTP server. -->
	<Listen addr=":8080" log="true" xheaders="false"/>

	<!-- Listen on other ports or unix sockets simultaneously. -->
	<!-- <Listen addr="/tmp/freegeoip" log="true" xheaders="true"/> -->

	<!-- Listen on HTTPS.
	     Run the following to generate a self-signed certificate:
	     go run $GOROOT/src/pkg/crypto/tls/generate_cert.go -host localhost
	-->
	<!--
	<Listen addr=":8090" log="true">
		<CertFile>./cert.pem</CertFile>
		<KeyFile>./key.pem</KeyFile>
	</Listen>
	-->

	<!-- Directory with the public website. -->
	<DocumentRoot>./static</DocumentRoot>

	<!-- IP database.
	     Make sure the database exists before starting the server. -->
	<IPDB File="./db/ipdb.sqlite" CacheSize="51200"/>

	<!-- Server limits, configuration of quota per remote IP.
	     Set MaxRequests to 0 to disable quota. -->
	<Limit MaxRequests="10000" Expire="3600"/>

	<!-- Redis is an optional method for managing quota. -->
	<Redis>
		<!-- <Addr>127.0.0.1:6379</Addr> -->
		<!-- Balance between multiple servers (tcp or unix socket): -->
		<!-- <Addr>10.0.0.1:6379</Addr> -->
		<!-- <Addr>10.0.0.2:6379</Addr> -->
		<!-- <Addr>/tmp/redis.sock</Addr> -->
		<!-- <Addr>/var/run/redis/redis.sock</Addr> -->
	</Redis>

	<!-- Require this header to be present -->
    <RequiredHeader></RequiredHeader>
</Server>
